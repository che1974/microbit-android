<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 3.3.1">

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="        if(!newName.toLowerCase().endsWith(&quot;.hex&quot;)) {"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/utils/FileUtils.java"
            line="97"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            register = cmd.getValue().toLowerCase().equals(&quot;on&quot;);"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/plugin/InformationPlugin.java"
            line="42"
            column="39"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                        ConnectedDevice newDev = new ConnectedDevice(newDeviceCode.toUpperCase(), newDeviceCode"
        errorLine2="                                                                                   ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="220"
            column="84"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                                .toUpperCase(), false, newDeviceAddress, 0, null, System.currentTimeMillis());"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="221"
            column="34"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                logi(&quot;scanLeDevice ::   Searching For &quot; + newDeviceName.toLowerCase());"
        errorLine2="                                                                        ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="1269"
            column="73"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            String s = device.getName().toLowerCase();"
        errorLine2="                                        ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="1372"
            column="41"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            if(newDeviceName.toLowerCase().startsWith(s)) {"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="1376"
            column="30"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                logi(&quot;mLeScanCallback.onLeScan() ::   Found micro:bit -&quot; + device.getName().toLowerCase() + &quot; &quot; +"
        errorLine2="                                                                                            ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="1377"
            column="93"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                logi(&quot;mLeScanCallback.onLeScan() ::   Found - device.getName() == &quot; + device.getName().toLowerCase()"
        errorLine2="                                                                                                       ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="1404"
            column="104"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            ConnectedDevice newDev = new ConnectedDevice(newDeviceCode.toUpperCase(),"
        errorLine2="                                                                       ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="1423"
            column="72"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                    newDeviceCode.toUpperCase(), false, newDeviceAddress, 0, null,"
        errorLine2="                                  ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/PairingActivity.java"
            line="1424"
            column="35"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            register = cmd.getValue().toLowerCase().equals(&quot;on&quot;);"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/plugin/TelephonyPlugin.java"
            line="34"
            column="39"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                            rc = lhs.name.toLowerCase().compareTo(rhs.name.toLowerCase());"
        errorLine2="                                          ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/utils/Utils.java"
            line="61"
            column="43"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                            rc = lhs.name.toLowerCase().compareTo(rhs.name.toLowerCase());"
        errorLine2="                                                                           ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/utils/Utils.java"
            line="61"
            column="76"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                        rc = lhs.name.toLowerCase().compareTo(rhs.name.toLowerCase());"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/utils/Utils.java"
            line="67"
            column="39"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                        rc = lhs.name.toLowerCase().compareTo(rhs.name.toLowerCase());"
        errorLine2="                                                                       ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/utils/Utils.java"
            line="67"
            column="72"/>
    </issue>

    <issue
        id="InconsistentLayout"
        severity="Warning"
        message="The id &quot;projectListViewRight&quot; in layout &quot;project_list&quot; is missing from the following layout configurations: layout (present in layout-land)"
        category="Correctness"
        priority="6"
        summary="Inconsistent Layouts"
        explanation="This check ensures that a layout resource which is defined in multiple resource folders, specifies the same set of widgets.&#xA;&#xA;This finds cases where you have accidentally forgotten to add a widget to all variations of the layout, which could result in a runtime crash for some resource configurations when a `findViewById()` fails.&#xA;&#xA;There **are** cases where this is intentional. For example, you may have a dedicated large tablet layout which adds some extra widgets that are not present in the phone version of the layout. As long as the code accessing the layout resource is careful to handle this properly, it is valid. In that case, you can suppress this lint check for the given extra or missing views, or the whole layout"
        errorLine1="            android:id=&quot;@+id/projectListViewRight&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-land/project_list.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The layout &quot;activity_main&quot; in layout-land has no declaration in the base `layout` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-land/activity_main.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The layout &quot;activity_main&quot; in layout-port has no declaration in the base `layout` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-port/activity_main.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The layout &quot;activity_main&quot; in layout-sw600dp-port has no declaration in the base `layout` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-sw600dp-port/activity_main.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_horizontal_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_horizontal_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_horizontal_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="3"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_horizontal_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_horizontal_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_horizontal_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_top_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_top_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_top_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_top_margin&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_top_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;activity_top_margin&quot;>24dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="6"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_top_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_top_margin&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_top_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_top_margin&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;activity_top_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;activity_top_margin&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;content_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="8"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;content_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;content_margin&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;content_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;content_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="10"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;content_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;content_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;content_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_text_size&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_text_size&quot;>25sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_size&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_size&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_height&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_text_size&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_text_size&quot;>25sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_text_size&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_text_size&quot;>25sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_text_size&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;button_text_size&quot;>25sp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_text_size&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_text_size&quot;>25sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_text_size&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_text_size&quot;>25sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_text_size&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_text_size&quot;>25sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_size&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_size&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_size&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_size&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_size&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;button_size&quot;>60dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_size&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_size&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_size&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_size&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_height&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_height&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_height&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_height&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;button_height&quot;>60dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="15"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_height&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_height&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_height&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_right_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_right_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="17"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_btn_size&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_btn_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="18"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_max&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_max&quot;>500dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_right_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_right_margin&quot;>0dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_right_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_right_margin&quot;>0dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_right_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_right_margin&quot;>0dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_right_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_right_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_right_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_right_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_right_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_right_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_btn_size&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_btn_size&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_btn_size&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_btn_size&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_btn_size&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;header_btn_size&quot;>60dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="20"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_btn_size&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_btn_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_btn_size&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_btn_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_btn_size&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_btn_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_min&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_min&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_max&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_max&quot;>500dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_max&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_max&quot;>500dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_max&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;header_device_name_max&quot;>300dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_max&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_max&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_max&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_max&quot;>500dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_max&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_max&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_height&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_min&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_min&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_min&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_min&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_min&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;header_device_name_min&quot;>200dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="22"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_min&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_min&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_min&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_min&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_device_name_min&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_device_name_min&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_width&quot;>240dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_height&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_height&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_height&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_height&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_height&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;header_title_height&quot;>60dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="23"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_height&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_height&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_height&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_width&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_width&quot;>120dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_width&quot;>130dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_width&quot;>240dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_width&quot;>240dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;header_title_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;header_title_width&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_area_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_area_margin&quot;>30dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="25"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_custom_button_height&quot; in values-sw600dp has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_custom_button_height&quot;>72dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp/dimens.xml"
            line="25"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_gap_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="26"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_connect_title_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_connect_title_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_area_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_area_margin&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_area_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_area_margin&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_area_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;logo_area_margin&quot;>100dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="27"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_area_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_area_margin&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_area_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_area_margin&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_area_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_area_margin&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_project_title_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_project_title_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_gap_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_gap_margin&quot;>15dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_gap_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_gap_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;logo_gap_margin&quot;>40dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="28"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_gap_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_gap_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_gap_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_gap_margin&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_connect_title_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_connect_title_width&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_connect_title_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_connect_title_width&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_connect_title_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_connect_title_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_width&quot;>500dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_bottom_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;logo_bottom_margin&quot;>60dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="29"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_bottom_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_bottom_margin&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;logo_bottom_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;logo_bottom_margin&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_connect_title_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_connect_title_width&quot;>340dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_connect_title_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_connect_title_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_connect_title_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_connect_title_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_empty_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_empty_width&quot;>585dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_project_title_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_project_title_width&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_project_title_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_project_title_width&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_project_title_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_project_title_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_no_project_btn_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_no_project_btn_width&quot;>340dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_project_title_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_project_title_width&quot;>340dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="31"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_project_title_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_project_title_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_project_title_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_project_title_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_tile_bar_height&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_tile_bar_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_tile_bar_height&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_tile_bar_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_tile_bar_height&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_tile_bar_height&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_width&quot;>180dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_width&quot;>310dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_width&quot;>500dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_width&quot;>690dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_start_btn_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_start_btn_width&quot;>240dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_tile_bar_height&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_tile_bar_height&quot;>50dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="32"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_tile_bar_height&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_tile_bar_height&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_empty_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_empty_width&quot;>585dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_empty_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_empty_width&quot;>600dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_empty_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_empty_width&quot;>585dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_empty_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_empty_width&quot;>800dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_device_name_width&quot;>210dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="33"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_width&quot;>480dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_empty_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_device_name_empty_width&quot;>340dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="34"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_device_name_empty_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_device_name_empty_width&quot;>585dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_no_project_btn_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_no_project_btn_width&quot;>180dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_no_project_btn_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_no_project_btn_width&quot;>310dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_no_project_btn_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_no_project_btn_width&quot;>340dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_no_project_btn_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_no_project_btn_width&quot;>395dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_no_project_btn_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_no_project_btn_width&quot;>210dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="35"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_no_project_btn_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_no_project_btn_width&quot;>340dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_start_btn_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_start_btn_width&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_start_btn_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_start_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_start_btn_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_start_btn_width&quot;>240dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_start_btn_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_start_btn_width&quot;>395dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_name_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_name_width&quot;>800dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_activity_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_activity_margin&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_activity_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_activity_margin&quot;>30dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_activity_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_activity_margin&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_start_btn_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_start_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="36"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_start_btn_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_start_btn_width&quot;>240dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_main_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_main_margin&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_activity_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_activity_margin&quot;>80dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="37"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_activity_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_activity_margin&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="37"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_button_height&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_button_height&quot;>65dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="37"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_button_height&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_button_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="37"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_button_height&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_button_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="37"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_button_height&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;home_button_height&quot;>80dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="38"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;home_button_height&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;home_button_height&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="38"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_name_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_name_width&quot;>800dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="38"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_device_name_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_device_name_width&quot;>380dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="39"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_main_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_main_margin&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="39"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The bool &quot;showSortMenu&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;bool name=&quot;showSortMenu&quot;>true&lt;/bool>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="40"
            column="11"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;divider_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;divider_margin&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_name_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_name_width&quot;>406dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_name_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_name_width&quot;>950dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The bool &quot;showSortMenu&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;bool name=&quot;showSortMenu&quot;>true&lt;/bool>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="41"
            column="11"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_ui_land_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_ui_land_width&quot;>600dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="41"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_main_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_main_margin&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="41"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_main_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_main_margin&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="41"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_name_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;project_name_width&quot;>800dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="41"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;device_name_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;device_name_width&quot;>550dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="42"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;mbit_tip_img_size&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;mbit_tip_img_size&quot;>175dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="42"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_main_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;project_main_margin&quot;>20dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="42"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_name_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_name_width&quot;>950dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="42"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_gap_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;divider_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;divider_margin&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_main_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_main_margin&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_btn_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="44"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;device_lv_bottom_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;device_lv_bottom_margin&quot;>70dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="44"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_name_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_name_width&quot;>800dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="44"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_device_name_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_device_name_width&quot;>450dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="45"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_device_name_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_device_name_width&quot;>380dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="45"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_item_height&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="45"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_main_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_main_margin&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="45"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_content_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_device_name_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;connect_device_name_width&quot;>150dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="46"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_device_name_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_device_name_width&quot;>380dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;device_main_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;device_main_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;divider_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;divider_margin&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_btn_margin_top&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_btn_margin_top&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_ui_land_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_ui_land_width&quot;>600dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;device_lv_bottom_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;device_lv_bottom_margin&quot;>70dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;divider_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;divider_margin&quot;>20dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="47"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;divider_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;divider_margin&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_device_name_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_device_name_width&quot;>550dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_margin_top&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_margin_top&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_ui_land_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_ui_land_width&quot;>600dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;device_lv_bottom_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;device_lv_bottom_margin&quot;>70dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="48"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;mbit_tip_img_size&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;mbit_tip_img_size&quot;>125dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;mbit_tip_img_size&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;mbit_tip_img_size&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;mbit_tip_img_size&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;mbit_tip_img_size&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_gap_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="49"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_gap_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="49"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_btn_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="49"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;divider_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;divider_margin&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="49"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;mbit_tip_img_size&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;mbit_tip_img_size&quot;>175dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="49"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_gap_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_btn_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_btn_width&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_item_height&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;device_lv_bottom_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;device_lv_bottom_margin&quot;>70dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;tip_title_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;tip_title_width&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_content_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_btn_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_item_height&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_item_height&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_txt_img_btn_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_txt_img_btn_width&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;tip_text_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;tip_text_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_content_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_content_margin&quot;>5dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="52"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_btn_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_btn_width&quot;>40dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="52"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_item_height&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="52"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_image_margin_top&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_image_margin_top&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="52"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_btn_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="52"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;mbit_tip_img_size&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;mbit_tip_img_size&quot;>150dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="52"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_gap_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;button_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="53"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_content_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_item_height&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_item_height&quot;>45dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_btn_margin_top&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_btn_margin_top&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_image_margin_top&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_image_margin_top&quot;>2dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_height&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_content_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_content_margin&quot;>6dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_btn_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_btn_width&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_btn_margin_top&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_btn_margin_top&quot;>15dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_image_margin_top&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_image_margin_top&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;mbit_tip_img_size&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;mbit_tip_img_size&quot;>175dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_gap_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_item_height&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_item_height&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_btn_margin_top&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_btn_margin_top&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_image_margin_top&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_image_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;tip_title_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;tip_title_width&quot;>400dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_content_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_content_margin&quot;>5dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_btn_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_btn_margin_top&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_btn_margin_top&quot;>5dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_btn_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;tip_text_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;tip_text_width&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_lv_item_height&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_image_margin_top&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_image_margin_top&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_height&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_header_section_marginTop&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_header_section_marginTop&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_content_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_content_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_btn_margin_top&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_btn_margin_top&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_txt_img_btn_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_txt_img_btn_width&quot;>166dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_section_paddingBottom&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_section_paddingBottom&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_image_margin_top&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_image_margin_top&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_btn_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_btn_width&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_btn_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_txt_img_btn_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_txt_img_btn_width&quot;>480dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_txt_img_btn_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_txt_img_btn_width&quot;>315dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_textinput_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_textinput_width&quot;>400dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connect_tip_btn_margin_top&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connect_tip_btn_margin_top&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="60"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_btn_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="60"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_height&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_height&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="60"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_height&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="60"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_area_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_area_width&quot;>300dp"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="60"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_btn_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="61"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_height&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_margin&quot;>6dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_height&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="62"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_txt_img_btn_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_txt_img_btn_width&quot;>365dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_button_size&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_button_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_header_section_marginTop&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_header_section_marginTop&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_btn_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_btn_width&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="63"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;lv_item_margin&quot;>16dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="63"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_section_paddingBottom&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_section_paddingBottom&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="63"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingLeft&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingLeft&quot;>40dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="63"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_height&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_txt_img_btn_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;lv_txt_img_btn_width&quot;>205dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="64"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_header_section_marginTop&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_header_section_marginTop&quot;>140dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingRight&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingRight&quot;>40dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_textinput_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_textinput_width&quot;>400dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_item_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_item_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_area_width&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_area_width&quot;>300dp"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_section_paddingBottom&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_section_paddingBottom&quot;>140dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_header_section_marginTop&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_header_section_marginTop&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_header_section_marginTop&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_header_section_marginTop&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;lv_txt_img_btn_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;lv_txt_img_btn_width&quot;>646dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_section_paddingBottom&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_section_paddingBottom&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_section_paddingBottom&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_section_paddingBottom&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_textinput_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_textinput_width&quot;>400dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_button_size&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_button_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="67"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_area_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_area_width&quot;>300dp"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="67"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_header_section_marginTop&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;popup_header_section_marginTop&quot;>100dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="67"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_textinput_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_textinput_width&quot;>460dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="67"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_textinput_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_textinput_width&quot;>520dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="67"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_area_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_area_width&quot;>180dp"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="68"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_area_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_area_width&quot;>240dp"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="68"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_section_paddingBottom&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;popup_buttons_section_paddingBottom&quot;>100dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="68"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingLeft&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingLeft&quot;>40dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="68"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_button_size&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_button_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="69"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_header_section_marginTop&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_header_section_marginTop&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="69"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingRight&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingRight&quot;>40dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="69"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_textinput_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;popup_textinput_width&quot;>340dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="69"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_button_size&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_button_size&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="70"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_button_size&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_button_size&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="70"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_area_width&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;popup_buttons_area_width&quot;>240dp&lt;/dimen> &lt;!-- distance between left button edge and right button edge -->"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="70"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_section_paddingBottom&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_section_paddingBottom&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="70"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingLeft&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingLeft&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="70"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_button_size&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;popup_button_size&quot;>80dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="71"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingLeft&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingLeft&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="71"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingLeft&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingLeft&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="71"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingRight&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingRight&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="71"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_textinput_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_textinput_width&quot;>400dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="71"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_buttons_area_width&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_buttons_area_width&quot;>300dp"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="72"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingLeft&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;popup_paddingLeft&quot;>10dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="72"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingRight&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingRight&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="72"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingRight&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingRight&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="72"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingRight&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;popup_paddingRight&quot;>10dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="73"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_button_size&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_button_size&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="74"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingLeft&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingLeft&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="75"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_paddingRight&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_paddingRight&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="76"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_top&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="76"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_bottom&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_bottom&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="77"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_vertical_spacing&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_vertical_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="80"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_height&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_height&quot;>160dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="81"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_top&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="81"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_bottom&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_bottom&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="82"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;fab_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="83"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_top&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="83"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_bottom&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_bottom&quot;>3dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="84"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_top&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="84"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_top&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="84"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_top&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="84"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_vertical_spacing&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_vertical_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="85"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_bottom&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_bottom&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="85"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_bottom&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_bottom&quot;>3dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="85"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_bottom&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_bottom&quot;>3dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="85"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="86"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_height&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_height&quot;>160dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="86"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_padding_top&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_padding_top&quot;>36dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="87"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_vertical_spacing&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_vertical_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="87"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;fab_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="88"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_height&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_height&quot;>160dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="88"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_vertical_spacing&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_vertical_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="88"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_vertical_spacing&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_vertical_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="88"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_vertical_spacing&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;nav_header_vertical_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="88"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_top&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="88"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_height&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_height&quot;>160dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="89"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_height&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_height&quot;>160dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="89"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_height&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;nav_header_height&quot;>160dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="89"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;refresh_btn_margin_bottom&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_bottom&quot;>3dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="89"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;buttons_layout_margin&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;buttons_layout_margin&quot;>18dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="90"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;fab_margin&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="90"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_icon_padding&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_icon_padding&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="91"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;fab_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="91"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;fab_margin&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="91"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;fab_margin&quot; in values-sw360dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1=" &lt;dimen name=&quot;fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="91"
            column="9"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_margin&quot;>9dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="92"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_vertical_spacing&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_vertical_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="92"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_padding_top&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_padding_top&quot;>30dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="93"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_padding_top&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_padding_top&quot;>48dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="93"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;nav_header_height&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;nav_header_height&quot;>160dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="93"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_title_text_size&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_title_text_size&quot;>26sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="93"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_margin&quot;>4dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="94"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;buttons_layout_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;buttons_layout_margin&quot;>6dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="94"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;button_padding_top&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;button_padding_top&quot;>14dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="95"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;fab_margin&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="95"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;buttons_layout_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;buttons_layout_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="96"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_text_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_text_width&quot;>280dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="97"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_1_gif_image_width&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_1_gif_image_width&quot;>480dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="98"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_1_gif_image_height&quot; in values-sw720dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_1_gif_image_height&quot;>380dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="99"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_1_gif_image_width&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_1_gif_image_width&quot;>290dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="99"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_1_gif_image_height&quot; in values-sw360dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_1_gif_image_height&quot;>230dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="100"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_title_and_gif_layout_margin_start&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_title_and_gif_layout_margin_start&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="100"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;popup_text_layout_padding_top&quot; in values-sw720dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;popup_text_layout_padding_top&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="100"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_text_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_text_width&quot;>240dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="103"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connections_container_with_button_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connections_container_with_button_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="104"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_1_gif_image_width&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_1_gif_image_width&quot;>460dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="104"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;delete_button_width_padding&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;delete_button_width_padding&quot;>26dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="105"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_1_gif_image_height&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_1_gif_image_height&quot;>370dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="105"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connections_container_layout_padding_top&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connections_container_layout_padding_top&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="106"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;delete_button_height_padding&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;delete_button_height_padding&quot;>21dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="106"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connections_container_layouts_indentation&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connections_container_layouts_indentation&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="107"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_title_and_gif_layout_margin_start&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_title_and_gif_layout_margin_start&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="110"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_tip_layout_height_padding&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_tip_layout_height_padding&quot;>0dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="111"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;view_divider_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;view_divider_margin&quot;>0dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="111"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_title_text_size&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_title_text_size&quot;>20sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="112"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connection_smile_image_height&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connection_smile_image_height&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="114"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_layout_margin&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_layout_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="114"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_connection_header_margin_bottom&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_connection_header_margin_bottom&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="115"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;connection_having_problem_text_size&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;connection_having_problem_text_size&quot;>20sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="117"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_text_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_text_width&quot;>140dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="117"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_1_gif_image_width&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_1_gif_image_width&quot;>270dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="118"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_1_gif_image_height&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_1_gif_image_height&quot;>210dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="119"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_tip_title_margin_bottom&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_tip_title_margin_bottom&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="121"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_item_lists_indentation&quot; in values-sw600dp-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_item_lists_indentation&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="123"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_header_text_size&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_header_text_size&quot;>28sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="126"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_buttons_layout_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_buttons_layout_margin&quot;>17dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="127"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;white_header_text_margin_bottom&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;white_header_text_margin_bottom&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="128"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_tip_layout_height_padding&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_tip_layout_height_padding&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="130"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_two_image_layout_margin&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_two_image_layout_margin&quot;>18dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="131"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;pairing_step_two_tip_layout_padding_top&quot; in values-sw600dp-port has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;pairing_step_two_tip_layout_padding_top&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="132"
            column="12"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The dimen &quot;project_item_lists_indentation&quot; in values-land has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;dimen name=&quot;project_item_lists_indentation&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="139"
            column="12"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="`android:elevation` requires API level 21 (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        &lt;item name=&quot;android:elevation&quot;>@dimen/elevation&lt;/item>"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/styles.xml"
            line="10"
            column="15"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="`android:elevation` requires API level 21 (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        &lt;item name=&quot;android:elevation&quot;>@dimen/elevation&lt;/item>"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/styles.xml"
            line="108"
            column="15"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="`android:elevation` requires API level 21 (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        &lt;item name=&quot;android:elevation&quot;>@dimen/elevation&lt;/item>"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/styles.xml"
            line="175"
            column="15"/>
    </issue>

    <issue
        id="Suspicious0dp"
        severity="Error"
        message="Suspicious size: this will make the view invisible, probably intended for `layout_width`"
        category="Correctness"
        priority="6"
        summary="Suspicious 0dp dimension"
        explanation="Using 0dp as the width in a horizontal LinearLayout with weights is a useful trick to ensure that only the weights (and not the intrinsic sizes) are used when sizing the children.&#xA;&#xA;However, if you use 0dp for the opposite dimension, the view will be invisible. This can happen if you change the orientation of a layout without also flipping the 0dp dimension in all the children."
        errorLine1="        android:layout_height=&quot;0dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/view_pairing_searching.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="Suspicious0dp"
        severity="Error"
        message="Suspicious size: this will make the view invisible, probably intended for `layout_width`"
        category="Correctness"
        priority="6"
        summary="Suspicious 0dp dimension"
        explanation="Using 0dp as the width in a horizontal LinearLayout with weights is a useful trick to ensure that only the weights (and not the intrinsic sizes) are used when sizing the children.&#xA;&#xA;However, if you use 0dp for the opposite dimension, the view will be invisible. This can happen if you change the orientation of a layout without also flipping the 0dp dimension in all the children."
        errorLine1="        android:layout_height=&quot;0dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/view_pairing_searching.xml"
            line="19"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `backgroundTintMode` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="            android:backgroundTintMode=&quot;screen&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_projects.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="    android:elevation=&quot;@dimen/activity_bottom_margin&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/pairing_toolbar.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="    android:elevation=&quot;@dimen/activity_vertical_margin&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/projects_app_bar.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="ProtectedPermissions"
        severity="Error"
        message="Permission is only granted to system apps"
        category="Correctness"
        priority="5"
        summary="Using system app permission"
        explanation="Permissions with the protection level signature, privileged or signatureOrSystem are only granted to system apps. If an app is a regular non-system app, it will never be able to use these permissions."
        errorLine1="    &lt;uses-permission android:name=&quot;android.permission.INTERACT_ACROSS_USERS&quot;  android:protectionLevel=&quot;signature&quot;/>"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/AndroidManifest.xml"
            line="30"
            column="22"/>
    </issue>

    <issue
        id="ProtectedPermissions"
        severity="Error"
        message="Permission is only granted to system apps"
        category="Correctness"
        priority="5"
        summary="Using system app permission"
        explanation="Permissions with the protection level signature, privileged or signatureOrSystem are only granted to system apps. If an app is a regular non-system app, it will never be able to use these permissions."
        errorLine1="    &lt;uses-permission android:name=&quot;android.permission.INTERACT_ACROSS_USERS_FULL&quot;  android:protectionLevel=&quot;signature&quot;/>"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/AndroidManifest.xml"
            line="31"
            column="22"/>
    </issue>

    <issue
        id="AppCompatCustomView"
        severity="Error"
        message="This custom view should extend `android.support.v7.widget.AppCompatEditText` instead"
        category="Correctness"
        priority="4"
        summary="Appcompat Custom Widgets"
        explanation="In order to support features such as tinting, the appcompat library will automatically load special appcompat replacements for the builtin widgets. However, this does not work for your own custom views.&#xA;&#xA;Instead of extending the `android.widget` classes directly, you should instead extend one of the delegate classes in `android.support.v7.widget.AppCompat`."
        errorLine1="public class ExtendedEditText extends EditText {"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/control/ExtendedEditText.java"
            line="15"
            column="39"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:appcompat-v7 than 23.1.0 is available: 23.4.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.android.support:appcompat-v7:23.1.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/build.gradle"
            line="25"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:design than 23.1.0 is available: 23.4.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.android.support:design:23.1.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/build.gradle"
            line="26"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:cardview-v7 than 23.1.0 is available: 23.4.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.android.support:cardview-v7:23.1.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/build.gradle"
            line="28"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:recyclerview-v7 than 23.1.0 is available: 23.4.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.android.support:recyclerview-v7:23.1.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/build.gradle"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.google.android.gms:play-services-analytics than 9.2.0 is available: 16.0.7"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.google.android.gms:play-services-analytics:9.2.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/build.gradle"
            line="31"
            column="5"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="This dimension is used as a text size: Should use &quot;`sp`&quot; instead of &quot;`dp`&quot;"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="    &lt;dimen name=&quot;splash_screen_text_size&quot;>24dp&lt;/dimen>"
        errorLine2="                                          ^">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp/dimens.xml"
            line="4"
            column="43"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_splash_screen.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="This dimension is used as a text size: Should use &quot;`sp`&quot; instead of &quot;`dp`&quot;"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="    &lt;dimen name=&quot;splash_screen_text_size&quot;>20dp&lt;/dimen>"
        errorLine2="                                          ^">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/dimens.xml"
            line="123"
            column="43"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_splash_screen.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully."
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="http://developer.android.com/guide/practices/security.html"
        urls="http://developer.android.com/guide/practices/security.html"
        errorLine1="        webSettings.setJavaScriptEnabled(true);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/activity/HelpWebView.java"
            line="47"
            column="9"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup. More info: https://developer.android.com/training/backup/autosyncapi.html"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.&#xA;&#xA;This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/training/backup/autosyncapi.html"
        urls="https://developer.android.com/training/backup/autosyncapi.html,http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/AndroidManifest.xml"
            line="51"
            column="6"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="Should explicitly set `android:allowBackup` to `true` or `false` (it&apos;s `true` by default, and that can have some security implications for the application&apos;s data)"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.&#xA;&#xA;This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/training/backup/autosyncapi.html"
        urls="https://developer.android.com/training/backup/autosyncapi.html,http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/AndroidManifest.xml"
            line="51"
            column="6"/>
    </issue>

    <issue
        id="ExpiredTargetSdkVersion"
        severity="Fatal"
        message="Google Play requires that apps target API level 26 or higher.&#xA;"
        category="Compliance"
        priority="8"
        summary="TargetSdkVersion No Longer Supported"
        explanation="As of the second half of 2018, Google Play requires that new apps and app updates target API level 26 or higher.&#xA;&#xA;Configuring your app to target a recent API level ensures that users benefit from significant security and performance improvements, while still allowing your app to run on older Android versions (down to the `minSdkVersion`).&#xA;&#xA;To update your `targetSdkVersion`, follow the steps from &quot;Meeting Google Play requirements for target API level&quot;,&#xA;https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        url="https://support.google.com/googleplay/android-developer/answer/113469#targetsdk"
        urls="https://support.google.com/googleplay/android-developer/answer/113469#targetsdk,https://support.google.com/googleplay/android-developer/answer/113469#targetsdk,https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        errorLine1="        targetSdkVersion 23"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/build.gradle"
            line="8"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields; this is a memory leak (and also breaks Instant Run)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    private static final Context ctx = MBApp.getApp();"
        errorLine2="            ~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/ui/PopUp.java"
            line="64"
            column="13"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one `&lt;TextView/>` and a compound drawable"
        category="Performance"
        priority="6"
        summary="Node can be replaced by a `TextView` with compound drawables"
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).&#xA;&#xA;If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.&#xA;&#xA;There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="        &lt;LinearLayout style=&quot;@style/connection_description_and_smile_layout_style&quot;>"
        errorLine2="         ~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-sw600dp-port/pairing_manage_devices.xml"
            line="19"
            column="10"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new SparseArray&lt;String>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="            HashMap&lt;Integer, String> eventLabels = new HashMap&lt;>();"
        errorLine2="                                                   ~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/core/GoogleAnalyticsManager.java"
            line="104"
            column="52"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new SparseArray&lt;String>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="                HashMap&lt;Integer, String> eventLabels = new HashMap&lt;>();"
        errorLine2="                                                       ~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/core/GoogleAnalyticsManager.java"
            line="130"
            column="56"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new SparseArray&lt;String>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="                HashMap&lt;Integer, String> eventLabels = new HashMap&lt;>();"
        errorLine2="                                                       ~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/core/GoogleAnalyticsManager.java"
            line="154"
            column="56"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new SparseArray&lt;String>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="            HashMap&lt;Integer, String> eventLabels = new HashMap&lt;>();"
        errorLine2="                                                   ~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/core/GoogleAnalyticsManager.java"
            line="169"
            column="52"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new SparseArray&lt;String>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="                HashMap&lt;Integer, String> eventLabels = new HashMap&lt;>();"
        errorLine2="                                                       ~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/core/GoogleAnalyticsManager.java"
            line="186"
            column="56"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new SparseArray&lt;String>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="                HashMap&lt;Integer, String> eventLabels = new HashMap&lt;>();"
        errorLine2="                                                       ~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/java/com/samsung/microbit/core/GoogleAnalyticsManager.java"
            line="207"
            column="56"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set `android:baselineAligned=&quot;false&quot;` on this element for better performance"
        category="Performance"
        priority="3"
        summary="Missing `baselineAligned` attribute"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_popup.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set `android:baselineAligned=&quot;false&quot;` on this element for better performance"
        category="Performance"
        priority="3"
        summary="Missing `baselineAligned` attribute"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-land/view_connect_microbit.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set `android:baselineAligned=&quot;false&quot;` on this element for better performance"
        category="Performance"
        priority="3"
        summary="Missing `baselineAligned` attribute"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-land/view_pairing_step_2.xml"
            line="7"
            column="6"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `(undefined)` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        &lt;TextView"
        errorLine2="         ~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_popup.xml"
            line="29"
            column="10"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `match_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        android:layout_width=&quot;match_parent&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_popup.xml"
            line="85"
            column="9"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `(undefined)` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/view_pairing_searching.xml"
            line="54"
            column="10"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `(undefined)` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                &lt;Button"
        errorLine2="                 ~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-land/view_pairing_searching.xml"
            line="71"
            column="18"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `(undefined)` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="    &lt;TextView"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/view_pairing_step_2.xml"
            line="7"
            column="6"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="            android:layout_weight=&quot;1&quot;>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-sw600dp-port/activity_main.xml"
            line="48"
            column="13"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="                    android:layout_weight=&quot;2&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/pairing_manage_devices.xml"
            line="34"
            column="21"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `#000000` with a theme that also paints a background (inferred theme is `@style/AppTheme_NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;#000000&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_camera_activity_permission_checker.xml"
            line="9"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/bg` with a theme that also paints a background (inferred theme is `@style/AppTheme.NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@drawable/bg&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_connect.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/bg` with a theme that also paints a background (inferred theme is `@style/AppTheme.NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@drawable/bg&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-land/activity_main.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/bg` with a theme that also paints a background (inferred theme is `@style/AppTheme.NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@drawable/bg&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_projects.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/bg` with a theme that also paints a background (inferred theme is `@android_style/Theme_NoTitleBar_Fullscreen`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@drawable/bg&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_splash_screen.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@android:color/white` with a theme that also paints a background (inferred theme is `@style/AppTheme.NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@android:color/white&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/app_bar_small_divider.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/main_gray_color` with a theme that also paints a background (inferred theme is `@style/AppTheme.NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/main_gray_color&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/custom_nav_header_main.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/main_gray_color` with a theme that also paints a background (inferred theme is `@style/AppTheme.NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/main_gray_color&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/pairing_toolbar.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/main_gray_color` with a theme that also paints a background (inferred theme is `@style/AppTheme.NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/main_gray_color&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/projects_app_bar.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/gray_color` with a theme that also paints a background (inferred theme is `@style/AppTheme.NoActionBar`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/gray_color&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/view_divider.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.menu.activity_main_drawer` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/menu/activity_main_drawer.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.projectListSortOrder` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1=" &lt;array name=&quot;projectListSortOrder&quot;>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/arrays.xml"
            line="3"
            column="9"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.moreListItems` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;array name=&quot;moreListItems&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/arrays.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.website_array` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string-array name=&quot;website_array&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/arrays.xml"
            line="17"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.black_overlay` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;black_overlay&quot;>#66000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.actionMenuTitleTextColor` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;actionMenuTitleTextColor&quot;>#00000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.actionMenuTextColor` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;actionMenuTextColor&quot;>#0F0F0FF0&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.divider_color` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;divider_color&quot;>#ff000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="7"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.darkgray_color` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;darkgray_color&quot;>#414141&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.cancel_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;cancel_button&quot;>#FD645B&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="25"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.blue_button_flash` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;blue_button_flash&quot;>#1CC6FD&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.progress_bar_progressed` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;progress_bar_progressed&quot;>#16cffd&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.progress_bar_not_progressed` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;progress_bar_not_progressed&quot;>#333333&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.accent_material_light_1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;accent_material_light_1&quot;>#d7dbdb&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.gray_green` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;gray_green&quot;>#394535&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.custom_button_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;custom_button_text&quot;>#525252&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/colors.xml"
            line="38"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.delete_device_project` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/delete_device_project.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/delete_device_project.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/delete_device_project.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/delete_device_project.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.activity_horizontal_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="3"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="3"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="3"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="3"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="3"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.activity_top_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;activity_top_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="6"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="6"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="6"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="6"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="6"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.content_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;content_margin&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="10"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="10"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="10"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="8"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="10"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="10"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.button_text_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;button_text_size&quot;>25sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="13"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="13"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="13"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="11"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="13"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="13"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.button_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;button_size&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="14"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="14"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="14"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="12"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="14"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="14"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.button_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;button_height&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="15"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="15"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="15"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="13"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="15"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="15"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.header_right_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;header_right_margin&quot;>0dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="19"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="19"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="19"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="17"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="19"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="19"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.header_btn_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;header_btn_size&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="20"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="20"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="20"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="18"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="20"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="20"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.header_device_name_max` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;header_device_name_max&quot;>500dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="21"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="21"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="21"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="19"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="21"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="21"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.header_device_name_min` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;header_device_name_min&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="22"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="22"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="22"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="20"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="22"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="22"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.header_title_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;header_title_height&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="23"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="23"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="23"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="21"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="23"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="23"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_body_view_paddingVertical` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_body_view_paddingVertical&quot;>4dp&lt;/dimen> &lt;!-- spacing top/bottom between each view inside body section -->"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/dimens.xml"
            line="23"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="74"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="74"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="75"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="66"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="71"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="73"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="78"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.header_title_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;header_title_width&quot;>100dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="24"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="24"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="24"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="22"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="24"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="24"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.project_custom_button_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;project_custom_button_height&quot;>72dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp/dimens.xml"
            line="25"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.logo_area_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;logo_area_margin&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="27"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="27"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="27"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="25"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="27"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="27"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.logo_gap_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;logo_gap_margin&quot;>15dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="28"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="28"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="28"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="26"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="28"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="28"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_connect_title_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_connect_title_width&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="29"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="29"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="30"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="27"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="30"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="29"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.logo_bottom_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1=" &lt;dimen name=&quot;logo_bottom_margin&quot;>60dp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="29"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="29"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_project_title_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_project_title_width&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="30"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="30"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="31"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="28"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="31"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="30"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_tile_bar_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_tile_bar_height&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="31"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="31"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="32"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="31"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_device_name_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_device_name_width&quot;>180dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="32"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="32"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="33"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="29"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="32"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="32"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_device_name_empty_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_device_name_empty_width&quot;>585dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="33"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="33"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="34"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="30"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="33"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="33"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_no_project_btn_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_no_project_btn_width&quot;>180dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="34"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="34"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="35"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="31"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="34"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="34"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_start_btn_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_start_btn_width&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="35"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="35"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="36"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="32"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="35"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="35"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_activity_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_activity_margin&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="36"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="36"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="37"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="36"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="37"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.home_button_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;home_button_height&quot;>65dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="37"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="37"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="38"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="37"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="38"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.bool.showSortMenu` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;bool name=&quot;showSortMenu&quot;>true&lt;/bool>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="40"
            column="11"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="41"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.project_name_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;project_name_width&quot;>406dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="40"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="40"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="41"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="35"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="38"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="42"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="44"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.project_main_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;project_main_margin&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="41"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="41"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="42"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="36"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="39"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="43"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="45"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.device_name_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;device_name_width&quot;>550dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="42"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.connect_device_name_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;connect_device_name_width&quot;>450dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="45"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="45"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="46"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="39"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="46"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.device_main_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;device_main_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.divider_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;divider_margin&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="46"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="47"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="40"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="43"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="47"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="49"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.connect_ui_land_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;connect_ui_land_width&quot;>600dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="47"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="41"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.device_lv_bottom_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;device_lv_bottom_margin&quot;>70dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="47"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="48"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="44"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.connect_margin_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;connect_margin_top&quot;>50dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.mbit_tip_img_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;mbit_tip_img_size&quot;>125dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="48"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="48"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="52"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="42"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="48"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="49"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.button_gap_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;button_gap_margin&quot;>75dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="49"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="49"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="53"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="43"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="50"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.tip_title_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;tip_title_width&quot;>300dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="50"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.tip_text_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;tip_text_width&quot;>250dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="51"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.connect_lv_btn_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;connect_lv_btn_width&quot;>40dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="52"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="50"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="54"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="44"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="49"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="51"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.connect_lv_item_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;connect_lv_item_height&quot;>45dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="53"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="51"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="55"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="45"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="50"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="52"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.connect_content_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;connect_content_margin&quot;>6dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="54"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="52"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="56"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="46"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="51"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="53"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.connect_tip_image_margin_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;connect_tip_image_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="55"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="53"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="57"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="52"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="54"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.connect_tip_btn_margin_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;connect_tip_btn_margin_top&quot;>5dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="56"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="54"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="58"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="47"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="53"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="55"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="60"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.lv_btn_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;lv_btn_width&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="59"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="60"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="61"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="52"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="56"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="59"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="63"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.lv_item_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;lv_item_height&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="60"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="61"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="62"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="53"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="57"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="60"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.lv_item_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;lv_item_margin&quot;>6dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="61"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="62"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="63"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="54"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="58"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="61"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.lv_txt_img_btn_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;lv_txt_img_btn_width&quot;>365dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="62"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="59"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="64"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="51"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="59"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="58"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_header_section_marginTop` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_header_section_marginTop&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="65"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="65"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="67"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="57"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="62"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="64"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="69"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_buttons_section_paddingBottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_buttons_section_paddingBottom&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="66"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="66"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="68"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="58"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="63"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="65"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="70"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_textinput_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_textinput_width&quot;>460dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="67"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="67"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="69"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="59"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="64"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="66"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="71"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_buttons_area_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_buttons_area_width&quot;>180dp"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="68"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="68"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="70"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="60"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="65"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="67"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="72"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_button_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_button_size&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="70"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="70"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="71"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="62"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="67"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="69"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="74"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_paddingLeft` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_paddingLeft&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="71"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="71"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="72"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="63"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="68"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="70"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="75"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_paddingRight` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_paddingRight&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="72"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="72"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="73"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="64"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="69"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="71"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="76"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.refresh_btn_margin_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="84"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="84"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="84"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="76"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="81"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="83"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="88"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.refresh_btn_margin_bottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;refresh_btn_margin_bottom&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="85"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="85"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="85"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="77"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="82"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="84"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="89"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.nav_header_vertical_spacing` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;nav_header_vertical_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="88"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="88"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="88"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="80"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="85"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="87"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="92"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.nav_header_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;nav_header_height&quot;>160dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="89"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="89"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="89"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="81"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="86"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="88"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="93"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.button_icon_padding` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;button_icon_padding&quot;>20dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="91"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.fab_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-land/dimens.xml"
            line="91"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-land/dimens.xml"
            line="91"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw360dp-port/dimens.xml"
            line="91"
            column="9"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-land/dimens.xml"
            line="83"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="88"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-land/dimens.xml"
            line="90"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="95"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.popup_text_layout_padding_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;popup_text_layout_padding_top&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw720dp-port/dimens.xml"
            line="100"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.pairing_searching_step_cycle_progress_bar_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;pairing_searching_step_cycle_progress_bar_size&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/dimens.xml"
            line="104"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="145"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.delete_button_width_padding` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;delete_button_width_padding&quot;>26dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="105"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.delete_button_height_padding` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;delete_button_height_padding&quot;>21dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="106"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.pairing_step_gif_view_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;pairing_step_gif_view_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/dimens.xml"
            line="108"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.view_divider_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;view_divider_margin&quot;>0dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="111"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.pairing_step_two_tip_layout_margin_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;pairing_step_two_tip_layout_margin_top&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/dimens.xml"
            line="112"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.pairing_connection_header_margin_bottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;pairing_connection_header_margin_bottom&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="115"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.pairing_step_header_text_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;pairing_step_header_text_size&quot;>28sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="126"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.pairing_step_buttons_layout_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;pairing_step_buttons_layout_margin&quot;>17dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="127"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.pairing_step_two_image_layout_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;pairing_step_two_image_layout_margin&quot;>18dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="131"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.pairing_step_two_tip_layout_padding_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;pairing_step_two_tip_layout_padding_top&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/dimens.xml"
            line="132"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.disconnect_device` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/disconnect_device.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/disconnect_device.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/disconnect_device.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/disconnect_device.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/disconnect_device.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/disconnect_device.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/disconnect_device.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/disconnect_device.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/disconnect_device.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.en_gb_emma_launching_camera_photo` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/raw/en_gb_emma_launching_camera_photo.mp3"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.en_gb_emma_launching_camera_video` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/raw/en_gb_emma_launching_camera_video.mp3"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.en_gb_emma_max_video` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/raw/en_gb_emma_max_video.mp3"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.en_gb_emma_photo_taken` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/raw/en_gb_emma_photo_taken.mp3"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.en_gb_emma_recording_video_30sec` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/raw/en_gb_emma_recording_video_30sec.mp3"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.en_gb_emma_taking_photo` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/raw/en_gb_emma_taking_photo.mp3"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.encouragement_emojio` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-hdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-ldpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xxhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/encouragement_emojio.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.find_my_phone` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/raw/find_my_phone.mp3"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.menu.gatt_services` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/menu/gatt_services.xml"
            line="16"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.greetings_emojio` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/greetings_emojio.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_more_vert` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-hdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-ldpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xxhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_more_vert.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.next_step_pairing_btn` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/next_step_pairing_btn.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/next_step_pairing_btn.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/next_step_pairing_btn.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/next_step_pairing_btn.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.xml.progress` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;rotate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/xml/progress.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.sam_clear_logo` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/sam_clear_logo.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.samples` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/raw/samples.zip"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.side_nav_bar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable/side_nav_bar.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.poweredBy` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;poweredBy&quot;>Powered by\r\n SAMSUNG&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.copyright` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;copyright&quot;>Copyright © 1995&amp;#8211;2015 SAMSUNG&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.user_agent` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;user_agent&quot; translatable=&quot;false&quot;>SamsungBrowser/microbit Profile/OTA-DFU1.0&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.search_BLE_activity` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;search_BLE_activity&quot;>Search micro:bit&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.dummy_section_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;dummy_section_text&quot; formatted=&quot;false&quot;>Section %1d is just a dummy section.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.ble_not_supported` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;ble_not_supported&quot;>BLE is not supported&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.phase1_complete_ok` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;phase1_complete_ok&quot;>Phase 1 completed. press button 1 followed by button on screen&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="42"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.phase2_complete_ok` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;phase2_complete_ok&quot;>Phase 2 completed. Device should be flashed&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="43"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.phase1_complete_not_ok` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;phase1_complete_not_ok&quot;>Device not found or in right mode or connection error&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="44"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.downloading_file` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;downloading_file&quot;>Downloading file&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="46"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.label_data` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;label_data&quot;>Data:&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="48"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.label_device_address` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;label_device_address&quot;>Device address:&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="49"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.label_state` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;label_state&quot;>State:&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="50"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.no_data` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;no_data&quot;>No data&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="51"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.connected` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;connected&quot;>Connected&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.disconnected` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;disconnected&quot;>Disconnected&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="53"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_devices` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;title_devices&quot;>micro:bit Device Scan&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="54"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_activity_ledgrid` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;title_activity_ledgrid&quot;>Find micro:bit&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="55"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_activity_gamepad` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;title_activity_gamepad&quot;>GamePad&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="57"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.error_bluetooth_not_supported` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;error_bluetooth_not_supported&quot;>Bluetooth not supported.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="58"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.microbit_not_found` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;microbit_not_found&quot;>micro:bit not found. Please search.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.microbit_found` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;microbit_found&quot;>Use existing micro:bit ?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="60"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.error_bluetooth_not_enabled` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;error_bluetooth_not_enabled&quot;>Bluetooth not enabled.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="61"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.devices_bluetooth_not_enabled` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;devices_bluetooth_not_enabled&quot;>Click to enable Bluetooth.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="62"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.devices_initiate_process` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;devices_initiate_process&quot;>Click to start.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="63"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.devices_find_microbit` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;devices_find_microbit&quot;>Search&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="64"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.devices_generate_code` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;devices_generate_code&quot;>Click to generate code.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="65"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.devices_scanning` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;devices_scanning&quot;>Looking for micro:bit, click to stop.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="66"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.devices_ble_unsupported` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;devices_ble_unsupported&quot;>BLE Not supported on your device&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="67"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.unknown_device` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;unknown_device&quot;>Unknown device&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="68"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.unknown_characteristic` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;unknown_characteristic&quot;>Unknown characteristic&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="69"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.unknown_service` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;unknown_service&quot;>Unknown service&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="70"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pattern_to_flash` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pattern_to_flash&quot;>Enter the pattern displayed on your micro:bit to flash&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="72"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pattern_to_pair` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pattern_to_pair&quot;>Enter the pattern displayed on your micro:bit to pair&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="73"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pairing_success_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pairing_success_title&quot;>micro:bit paired&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="78"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.run_code_button_name` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;run_code_button_name&quot;>Continue to Flash&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="79"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.flashing_failed_not_found` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;flashing_failed_not_found&quot;>Flashing Failed!Cannot read the file&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="80"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.flashing_failed_io_error` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;flashing_failed_io_error&quot;>Flashing Failed! Cannot find the file. Please reset micro:bit and try again.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="81"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.flashing_failed_message` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;flashing_failed_message&quot;>Flashing Failed! No Programs Found&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="82"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.flashing_tip_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;flashing_tip_title&quot;>Put the micro:bit in Flashing mode&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="96"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pairing_tip` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pairing_tip&quot;>Hold buttons A and B down and then press RESET.\n Wait for &quot;BLUEZONE&quot; to appear on micro:bit before releasing buttons &lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="97"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_connect` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_connect&quot;>Connect&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="101"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_disconnect` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_disconnect&quot;>Disconnect&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="102"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_refresh` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_refresh&quot;>Refresh&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="106"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_main_menu` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_main_menu&quot;>Menu&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="109"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_main_explore` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_main_explore&quot;>Explore&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="110"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_main_about` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_main_about&quot;>About&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="111"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_main_help` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_main_help&quot;>Help&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="112"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_main_privacy_cookies` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_main_privacy_cookies&quot;>Privacy &amp;amp; Cookies&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="113"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_main_terms_conditions` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_main_terms_conditions&quot;>Terms &amp;amp; Conditions&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="114"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_main_send_feedback` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_main_send_feedback&quot;>Send us your feedback&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="115"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu_main_share_statistics` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;menu_main_share_statistics&quot;>Share statistics&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="116"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.picture` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;picture&quot;>Picture&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="119"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.record` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;record&quot;>Record&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="120"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.stop` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;stop&quot;>Stop&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="121"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.description_info` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;description_info&quot;>Info&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="122"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.intro_message` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;intro_message&quot;>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="123"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_activity_about_us` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;title_activity_about_us&quot;>about_us&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="132"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.back_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;back_button&quot;>Take me Back&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="133"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.about_us` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;about_us&quot;> That\&apos;s All !! Happy Coding &lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="134"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.alert` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;alert&quot;>Alert&amp;#8230;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="141"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_previous_devices` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_previous_devices&quot;>No previously paired micro:bits&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="145"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.new_devices` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;new_devices&quot;>Connect to a new device&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="147"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.name_device` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;name_device&quot;>Name device&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="148"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.name_empty_error` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;name_empty_error&quot;>Please enter device name.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="149"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.connect` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;connect&quot;>Connect&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="150"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.gamepad` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;gamepad&quot;>Gamepad&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="151"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.step_connect_tip_text_step_three` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;step_connect_tip_text_step_three&quot;>Step 3&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="154"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.step_connect_tip_text_step_four_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;step_connect_tip_text_step_four_text&quot;>When you see the success message, \npress RESET and you\&apos;re done!&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="155"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.step_connect_tip_text_step_four` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;step_connect_tip_text_step_four&quot;>Step 4&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="157"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_step_connect_tip_text_step_four_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_step_connect_tip_text_step_four_text&quot;>When you see the success message, press RESET and you\&apos;re done!&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="158"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_step_connect_tip_text_step_three` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_step_connect_tip_text_step_three&quot;>Step 3&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="159"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.step_connect_tip_text_step_three_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;step_connect_tip_text_step_three_text&quot;>When asked, press button A \nand enter your PIN&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="160"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.step_connect_tip_text_step_three_text_one_line` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;step_connect_tip_text_step_three_text_one_line&quot;>When asked, press button A and enter your PIN&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="161"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_step_connect_tip_text_step_three_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_step_connect_tip_text_step_three_text&quot;>When asked, press button A and enter your PIN&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="162"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_step_connect_tip_text_step_four` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_step_connect_tip_text_step_four&quot;>Step 4&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="163"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_searching_microbit_found_message` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_searching_microbit_found_message&quot;>Open your notification drawer and enter your Pin&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="166"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.connect_tip_text_step_two_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;connect_tip_text_step_two_text&quot;>When asked, enter your PIP \n(personal identification pattern) &lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="173"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_connect_tip_text_step_two_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_connect_tip_text_step_two_text&quot;>When asked, enter your personal identification pattern &lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="174"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.step_enter_pattern_tip_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;step_enter_pattern_tip_text&quot;>Step 2&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="175"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_enter_pattern_tip_step_two` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_enter_pattern_tip_step_two&quot;>Step two&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="177"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_searching_tip_step_three` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_searching_tip_step_three&quot;>When asked for a PIN, press button A&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="181"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.enter_pin_to_pair_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;enter_pin_to_pair_text&quot;>Press button A, and\nenter the 6 digit PIN&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="182"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.step_enter_pin_to_pair_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;step_enter_pin_to_pair_text&quot;>Step 4&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="183"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_enterPinToPairText` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_enterPinToPairText&quot;>Press button A, and enter the 6 digit PIN&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="184"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.connectSearchingTitle` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;connectSearchingTitle&quot;>Connecting&amp;#8230;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="186"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_connectSearchingTitle` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_connectSearchingTitle&quot;>Connecting&amp;#8230;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="187"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pairing_msg_1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pairing_msg_1&quot;>Found micro:bit&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="189"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pairingErrorTitle` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pairingErrorTitle&quot;>Error&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="192"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.your_projects` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;your_projects&quot;>Your projects&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="199"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.saved_projects` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;saved_projects&quot;>saved projects&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="200"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.start_new_project` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;start_new_project&quot;>Start a new project&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="201"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.new_project` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;new_project&quot;>New project&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="202"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.loading_page_msg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;loading_page_msg&quot;>Please wait. Page is loading&amp;#8230;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="203"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.create_new_project` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;create_new_project&quot;>Create\na new project&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="211"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.download_existing` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;download_existing&quot;>Download Existing&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="214"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.downloading` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;downloading&quot;>Downloading&amp;#8230;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="215"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.q_overwrite_existing` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;q_overwrite_existing&quot;>A file with same name already exists. Overwrite the existing file?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="217"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.rename_file` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;rename_file&quot;>Rename Download File&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="218"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.download_complete` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;download_complete&quot;>Download complete. Flash to micro:bit ?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="220"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.download_failed_msg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;download_failed_msg&quot;>Try again later&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="221"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.download_failed_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;download_failed_title&quot;>Try again later&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="222"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.projects` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;projects&quot;>Projects&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="223"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pair_my_device` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pair_my_device&quot;>Connect&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="224"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.connect_my_device` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;connect_my_device&quot;>Connect&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="225"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.view` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;view&quot;>View&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="227"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pairing_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pairing_title&quot;>Pairing&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="233"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.flashing_error_msg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;flashing_error_msg&quot;>micro:bit not in correct state&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="234"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.flashing_phase1_msg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;flashing_phase1_msg&quot;>Finding the device&amp;#8230;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="235"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pairing_phase2_msg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pairing_phase2_msg&quot;>Press button &quot;A&quot; on micro:bit to pair successfully. \n\n Waiting for the secret key&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="236"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pairing_phase2_msg_New` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pairing_phase2_msg_New&quot;>Enter PIN&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="237"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.web_view_demo` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;web_view_demo&quot;>Web View Demo&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="239"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sending_project` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;sending_project&quot;>Flashing project&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="241"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.no_device_paired` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;no_device_paired&quot;>Cannot connect.  No micro:bit paired&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="250"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.send` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;send&quot;>Change ID To FLASH&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="252"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.code` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;code&quot;>Change ID To VIEW&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="253"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.connect_to_mbit` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;connect_to_mbit&quot;>Connect to your micro:bit&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="255"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_activity_new_device` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;title_activity_new_device&quot;>NewDevice&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="256"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_activity_splash_screen` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;title_activity_splash_screen&quot;>SplashScreenActivity&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="264"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.dummy_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;dummy_button&quot;>Dummy Button&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="265"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.dummy_content` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;dummy_content&quot;>DUMMY\nCONTENT&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="266"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.manage_microbit_txt` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;manage_microbit_txt&quot;>To remove a paired micro:bit, \ngo to the bluetooth section \nin your device settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="290"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_manage_microbits` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_manage_microbits&quot;>To remove a paired micro:bit, go to the bluetooth section in your device settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="296"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.subtitle_manage_and_remove_microbits_label` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;subtitle_manage_and_remove_microbits_label&quot;>Follow the on-screen instructions to&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="298"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_subtitle_manage_and_remove_microbits_label` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_subtitle_manage_and_remove_microbits_label&quot;>Follow the on-screen instructions to&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="299"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.desc_go_to_bluetooth_settings` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;desc_go_to_bluetooth_settings&quot;>Go to bluetooth settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="308"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.tv_go_to_bluetooth_Settings` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;tv_go_to_bluetooth_Settings&quot;>Go to bluetooth settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="309"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.most_recent_device_status` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;most_recent_device_status&quot;>Most recently used micro:bit&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="330"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.device_connected_device_status` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;device_connected_device_status&quot;>Currently connected micro:bit&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="331"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.general_error_msg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;general_error_msg&quot;>Application error. Please contact developer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="334"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pair_new_device_dialog_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pair_new_device_dialog_title&quot;>Pair a new Device?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="335"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pair_new_device_dialog_message` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;pair_new_device_dialog_message&quot;>Pairing with a new device will remove any previously paired Mircobits.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="336"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.toolbar_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;toolbar_title&quot;>Menu&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="338"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.step_enter_pattern_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;step_enter_pattern_text&quot;>Step 2&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="339"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.reconnect_ok_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;reconnect_ok_button&quot;>Reconnect&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/strings.xml"
            line="372"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.ButtonBar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;ButtonBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/styles.xml"
            line="31"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/styles.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.ButtonBarButton` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;ButtonBarButton&quot; />"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/styles.xml"
            line="40"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/styles.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.h2` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;h2&quot; parent=&quot;@android:style/TextAppearance&quot;>"
        errorLine2="           ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/styles.xml"
            line="49"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/styles.xml"
            line="49"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.h4` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;h4&quot; parent=&quot;@android:style/TextAppearance&quot;>"
        errorLine2="           ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/styles.xml"
            line="61"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/styles.xml"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.h5` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;h5&quot; parent=&quot;@android:style/TextAppearance&quot;>"
        errorLine2="           ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/styles.xml"
            line="67"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/styles.xml"
            line="67"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.p1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;p1&quot; parent=&quot;@android:style/TextAppearance&quot;>"
        errorLine2="           ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/styles.xml"
            line="73"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/styles.xml"
            line="73"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.appbar_divider` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;appbar_divider&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values/styles.xml"
            line="90"
            column="12"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/values-sw600dp-port/styles.xml"
            line="90"
            column="12"/>
    </issue>

    <issue
        id="UnusedNamespace"
        severity="Warning"
        message="Unused namespace declaration xmlns:android; already declared on the root element"
        category="Performance"
        priority="1"
        summary="Unused namespace"
        explanation="Unused namespace declarations take up space and require processing that is not necessary"
        errorLine1="    &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/custom_nav_header_main.xml"
            line="10"
            column="19"/>
    </issue>

    <issue
        id="GifUsage"
        severity="Warning"
        message="Using the `.gif` format for bitmaps is discouraged"
        category="Usability:Icons"
        priority="5"
        summary="Using `.gif` format for bitmaps is discouraged"
        explanation="The `.gif` file format is discouraged. Consider using `.png` (preferred) or `.jpg` (acceptable) instead."
        url="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap"
        urls="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/emoji_fail_microbit.gif"/>
    </issue>

    <issue
        id="GifUsage"
        severity="Warning"
        message="Using the `.gif` format for bitmaps is discouraged"
        category="Usability:Icons"
        priority="5"
        summary="Using `.gif` format for bitmaps is discouraged"
        explanation="The `.gif` file format is discouraged. Consider using `.png` (preferred) or `.jpg` (acceptable) instead."
        url="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap"
        urls="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/emoji_flashing_microbit.gif"/>
    </issue>

    <issue
        id="GifUsage"
        severity="Warning"
        message="Using the `.gif` format for bitmaps is discouraged"
        category="Usability:Icons"
        priority="5"
        summary="Using `.gif` format for bitmaps is discouraged"
        explanation="The `.gif` file format is discouraged. Consider using `.png` (preferred) or `.jpg` (acceptable) instead."
        url="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap"
        urls="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/emoji_microbit_found.gif"/>
    </issue>

    <issue
        id="GifUsage"
        severity="Warning"
        message="Using the `.gif` format for bitmaps is discouraged"
        category="Usability:Icons"
        priority="5"
        summary="Using `.gif` format for bitmaps is discouraged"
        explanation="The `.gif` file format is discouraged. Consider using `.png` (preferred) or `.jpg` (acceptable) instead."
        url="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap"
        urls="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/hello_emoji_animation.gif"/>
    </issue>

    <issue
        id="GifUsage"
        severity="Warning"
        message="Using the `.gif` format for bitmaps is discouraged"
        category="Usability:Icons"
        priority="5"
        summary="Using `.gif` format for bitmaps is discouraged"
        explanation="The `.gif` file format is discouraged. Consider using `.png` (preferred) or `.jpg` (acceptable) instead."
        url="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap"
        urls="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/how_to_pair_microbit.gif"/>
    </issue>

    <issue
        id="GifUsage"
        severity="Warning"
        message="Using the `.gif` format for bitmaps is discouraged"
        category="Usability:Icons"
        priority="5"
        summary="Using `.gif` format for bitmaps is discouraged"
        explanation="The `.gif` file format is discouraged. Consider using `.png` (preferred) or `.jpg` (acceptable) instead."
        url="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap"
        urls="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/pairing_pin_screen_two.gif"/>
    </issue>

    <issue
        id="GifUsage"
        severity="Warning"
        message="Using the `.gif` format for bitmaps is discouraged"
        category="Usability:Icons"
        priority="5"
        summary="Using `.gif` format for bitmaps is discouraged"
        explanation="The `.gif` file format is discouraged. Consider using `.png` (preferred) or `.jpg` (acceptable) instead."
        url="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap"
        urls="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/splash_face.gif"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `bg.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/bg.png: 360x640 dp (540x960 px), drawable-ldpi/bg.png: 480x853 dp (360x640 px), drawable-mdpi/bg.png: 360x640 dp (360x640 px), drawable-xhdpi/bg.png: 360x640 dp (720x1280 px), drawable-xxhdpi/bg.png: 360x640 dp (1080x1920 px), drawable-xxxhdpi/bg.png: 360x640 dp (1440x2560 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/bg.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `bg.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-land-hdpi/bg.png: 640x360 dp (960x540 px), drawable-land-ldpi/bg.png: 853x480 dp (640x360 px), drawable-land-mdpi/bg.png: 640x360 dp (640x360 px), drawable-land-xhdpi/bg.png: 640x360 dp (1280x720 px), drawable-land-xxhdpi/bg.png: 640x360 dp (1920x1080 px), drawable-land-xxxhdpi/bg.png: 640x360 dp (2560x1440 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-land-mdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-land-xxxhdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-land-xhdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-land-xxhdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-land-hdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-land-ldpi/bg.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `bluetooth.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/bluetooth.png: 48x74 dp (72x111 px), drawable-sw600dp-ldpi/bluetooth.png: 96x148 dp (72x111 px), drawable-sw600dp-mdpi/bluetooth.png: 24x37 dp (24x37 px), drawable-sw600dp-xhdpi/bluetooth.png: 24x37 dp (48x74 px), drawable-sw600dp-xxhdpi/bluetooth.png: 24x37 dp (72x111 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/bluetooth.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/bluetooth.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/bluetooth.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/bluetooth.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/bluetooth.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `cancel_step_pairing_btn.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/cancel_step_pairing_btn.png: 22x22 dp (33x33 px), drawable-mdpi/cancel_step_pairing_btn.png: 20x20 dp (20x20 px), drawable-xhdpi/cancel_step_pairing_btn.png: 26x26 dp (52x52 px), drawable-xxhdpi/cancel_step_pairing_btn.png: 28x28 dp (83x83 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/cancel_step_pairing_btn.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/cancel_step_pairing_btn.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/cancel_step_pairing_btn.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/cancel_step_pairing_btn.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `emoji_entering_pattern.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/emoji_entering_pattern.png: 321x225 dp (482x338 px), drawable-ldpi/emoji_entering_pattern.png: 428x300 dp (321x225 px), drawable-mdpi/emoji_entering_pattern.png: 321x225 dp (321x225 px), drawable-xhdpi/emoji_entering_pattern.png: 321x225 dp (642x450 px), drawable-xxhdpi/emoji_entering_pattern.png: 321x225 dp (963x675 px), drawable-xxxhdpi/emoji_entering_pattern.png: 321x225 dp (1284x900 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/emoji_entering_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/emoji_entering_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/emoji_entering_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/emoji_entering_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/emoji_entering_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/emoji_entering_pattern.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `emoji_entering_pattern_valid_pattern.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/emoji_entering_pattern_valid_pattern.png: 321x225 dp (482x338 px), drawable-ldpi/emoji_entering_pattern_valid_pattern.png: 428x300 dp (321x225 px), drawable-mdpi/emoji_entering_pattern_valid_pattern.png: 321x225 dp (321x225 px), drawable-xhdpi/emoji_entering_pattern_valid_pattern.png: 321x225 dp (642x450 px), drawable-xxhdpi/emoji_entering_pattern_valid_pattern.png: 321x225 dp (963x675 px), drawable-xxxhdpi/emoji_entering_pattern_valid_pattern.png: 321x225 dp (1284x900 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/emoji_entering_pattern_valid_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/emoji_entering_pattern_valid_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/emoji_entering_pattern_valid_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/emoji_entering_pattern_valid_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/emoji_entering_pattern_valid_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/emoji_entering_pattern_valid_pattern.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `encouragement_emojio.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/encouragement_emojio.png: 63x49 dp (95x73 px), drawable-ldpi/encouragement_emojio.png: 127x97 dp (95x73 px), drawable-mdpi/encouragement_emojio.png: 95x73 dp (95x73 px), drawable-xhdpi/encouragement_emojio.png: 48x37 dp (95x73 px), drawable-xxhdpi/encouragement_emojio.png: 32x24 dp (95x73 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/encouragement_emojio.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `encouragement_emojio.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/encouragement_emojio.png: 63x49 dp (95x73 px), drawable-sw600dp-ldpi/encouragement_emojio.png: 127x97 dp (95x73 px), drawable-sw600dp-mdpi/encouragement_emojio.png: 95x73 dp (95x73 px), drawable-sw600dp-xhdpi/encouragement_emojio.png: 48x37 dp (95x73 px), drawable-sw600dp-xxhdpi/encouragement_emojio.png: 32x24 dp (95x73 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/encouragement_emojio.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `encouragement_emojio.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw720dp-hdpi/encouragement_emojio.png: 63x49 dp (95x73 px), drawable-sw720dp-ldpi/encouragement_emojio.png: 127x97 dp (95x73 px), drawable-sw720dp-mdpi/encouragement_emojio.png: 95x73 dp (95x73 px), drawable-sw720dp-xhdpi/encouragement_emojio.png: 48x37 dp (95x73 px), drawable-sw720dp-xxhdpi/encouragement_emojio.png: 32x24 dp (95x73 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xxhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-hdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-ldpi/encouragement_emojio.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `error_face.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/error_face.png: 31x23 dp (46x35 px), drawable-sw600dp-ldpi/error_face.png: 61x47 dp (46x35 px), drawable-sw600dp-mdpi/error_face.png: 46x35 dp (46x35 px), drawable-sw600dp-xhdpi/error_face.png: 23x18 dp (46x35 px), drawable-sw600dp-xxhdpi/error_face.png: 15x12 dp (46x35 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/error_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/error_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/error_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/error_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/error_face.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `flash_face.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/flash_face.png: 63x38 dp (95x57 px), drawable-ldpi/flash_face.png: 127x76 dp (95x57 px), drawable-mdpi/flash_face.png: 95x57 dp (95x57 px), drawable-xhdpi/flash_face.png: 48x29 dp (95x57 px), drawable-xxhdpi/flash_face.png: 32x19 dp (95x57 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/flash_face.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `flash_face.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/flash_face.png: 63x38 dp (95x57 px), drawable-sw600dp-ldpi/flash_face.png: 127x76 dp (95x57 px), drawable-sw600dp-mdpi/flash_face.png: 95x57 dp (95x57 px), drawable-sw600dp-xhdpi/flash_face.png: 48x29 dp (95x57 px), drawable-sw600dp-xxhdpi/flash_face.png: 32x19 dp (95x57 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/flash_face.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `flash_face.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw720dp-hdpi/flash_face.png: 63x38 dp (95x57 px), drawable-sw720dp-ldpi/flash_face.png: 127x76 dp (95x57 px), drawable-sw720dp-mdpi/flash_face.png: 95x57 dp (95x57 px), drawable-sw720dp-xhdpi/flash_face.png: 48x29 dp (95x57 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-hdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-mdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-ldpi/flash_face.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_arrow_down.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_arrow_down.png: 23x15 dp (35x23 px), drawable-ldpi/ic_arrow_down.png: 31x20 dp (23x15 px), drawable-mdpi/ic_arrow_down.png: 23x15 dp (23x15 px), drawable-xhdpi/ic_arrow_down.png: 23x15 dp (46x30 px), drawable-xxhdpi/ic_arrow_down.png: 23x15 dp (69x45 px), drawable-xxxhdpi/ic_arrow_down.png: 23x15 dp (92x60 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_arrow_down.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_arrow_down.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_arrow_down.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_arrow_down.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_arrow_down.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_arrow_down.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_arrow_left.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_arrow_left.png: 15x25 dp (23x37 px), drawable-ldpi/ic_arrow_left.png: 20x32 dp (15x24 px), drawable-mdpi/ic_arrow_left.png: 15x24 dp (15x24 px), drawable-xhdpi/ic_arrow_left.png: 15x24 dp (30x48 px), drawable-xxhdpi/ic_arrow_left.png: 15x24 dp (45x72 px), drawable-xxxhdpi/ic_arrow_left.png: 15x24 dp (60x96 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_arrow_left.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_arrow_left.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_arrow_left.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_arrow_left.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_arrow_left.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_arrow_left.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_back_arrow.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_back_arrow.png: 16x16 dp (24x24 px), drawable-ldpi/ic_back_arrow.png: 21x21 dp (16x16 px), drawable-mdpi/ic_back_arrow.png: 16x16 dp (16x16 px), drawable-xhdpi/ic_back_arrow.png: 16x16 dp (32x32 px), drawable-xxhdpi/ic_back_arrow.png: 16x16 dp (48x48 px), drawable-xxxhdpi/ic_back_arrow.png: 16x16 dp (64x64 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_back_arrow.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_back_arrow.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_back_arrow.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_back_arrow.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_back_arrow.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_back_arrow.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_connect.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_connect.png: 31x31 dp (47x47 px), drawable-ldpi/ic_connect.png: 41x41 dp (31x31 px), drawable-mdpi/ic_connect.png: 31x31 dp (31x31 px), drawable-xhdpi/ic_connect.png: 31x31 dp (62x62 px), drawable-xxhdpi/ic_connect.png: 31x31 dp (93x93 px), drawable-xxxhdpi/ic_connect.png: 31x31 dp (124x124 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_connect.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_connect.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_connect.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_connect.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_connect.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_connect.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_create_code.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_create_code.png: 31x31 dp (47x47 px), drawable-ldpi/ic_create_code.png: 41x41 dp (31x31 px), drawable-mdpi/ic_create_code.png: 31x31 dp (31x31 px), drawable-xhdpi/ic_create_code.png: 31x31 dp (62x62 px), drawable-xxhdpi/ic_create_code.png: 31x31 dp (93x93 px), drawable-xxxhdpi/ic_create_code.png: 31x31 dp (124x124 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_create_code.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_create_code.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_create_code.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_create_code.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_create_code.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_create_code.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_discover.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_discover.png: 31x31 dp (47x47 px), drawable-ldpi/ic_discover.png: 41x41 dp (31x31 px), drawable-mdpi/ic_discover.png: 31x31 dp (31x31 px), drawable-xhdpi/ic_discover.png: 31x31 dp (62x62 px), drawable-xxhdpi/ic_discover.png: 31x31 dp (93x93 px), drawable-xxxhdpi/ic_discover.png: 31x31 dp (124x124 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_discover.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_discover.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_discover.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_discover.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_discover.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_discover.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_face.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_face.png: 212x185 dp (318x278 px), drawable-ldpi/ic_face.png: 283x247 dp (212x185 px), drawable-mdpi/ic_face.png: 212x185 dp (212x185 px), drawable-xhdpi/ic_face.png: 212x185 dp (424x370 px), drawable-xxhdpi/ic_face.png: 212x185 dp (636x555 px), drawable-xxxhdpi/ic_face.png: 212x185 dp (848x740 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_face.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_flash.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_flash.png: 31x31 dp (47x47 px), drawable-ldpi/ic_flash.png: 41x41 dp (31x31 px), drawable-mdpi/ic_flash.png: 31x31 dp (31x31 px), drawable-xhdpi/ic_flash.png: 31x31 dp (62x62 px), drawable-xxhdpi/ic_flash.png: 31x31 dp (93x93 px), drawable-xxxhdpi/ic_flash.png: 31x31 dp (124x124 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_flash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_flash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_flash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_flash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_flash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_flash.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_more_vert.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_more_vert.png: 85x85 dp (128x128 px), drawable-ldpi/ic_more_vert.png: 171x171 dp (128x128 px), drawable-mdpi/ic_more_vert.png: 128x128 dp (128x128 px), drawable-xhdpi/ic_more_vert.png: 64x64 dp (128x128 px), drawable-xxhdpi/ic_more_vert.png: 43x43 dp (128x128 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_more_vert.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_more_vert.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/ic_more_vert.png: 85x85 dp (128x128 px), drawable-sw600dp-ldpi/ic_more_vert.png: 171x171 dp (128x128 px), drawable-sw600dp-mdpi/ic_more_vert.png: 128x128 dp (128x128 px), drawable-sw600dp-xhdpi/ic_more_vert.png: 64x64 dp (128x128 px), drawable-sw600dp-xxhdpi/ic_more_vert.png: 43x43 dp (128x128 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/ic_more_vert.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_more_vert.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw720dp-hdpi/ic_more_vert.png: 85x85 dp (128x128 px), drawable-sw720dp-ldpi/ic_more_vert.png: 171x171 dp (128x128 px), drawable-sw720dp-mdpi/ic_more_vert.png: 128x128 dp (128x128 px), drawable-sw720dp-xhdpi/ic_more_vert.png: 64x64 dp (128x128 px), drawable-sw720dp-xxhdpi/ic_more_vert.png: 43x43 dp (128x128 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xxhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-hdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-ldpi/ic_more_vert.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_my_scripts.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_my_scripts.png: 16x16 dp (24x24 px), drawable-ldpi/ic_my_scripts.png: 21x21 dp (16x16 px), drawable-mdpi/ic_my_scripts.png: 16x16 dp (16x16 px), drawable-xhdpi/ic_my_scripts.png: 16x16 dp (32x32 px), drawable-xxhdpi/ic_my_scripts.png: 16x16 dp (48x48 px), drawable-xxxhdpi/ic_my_scripts.png: 16x16 dp (64x64 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_my_scripts.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_my_scripts.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_my_scripts.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_my_scripts.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_my_scripts.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_my_scripts.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_person_step_1.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_person_step_1.png: 321x225 dp (482x338 px), drawable-ldpi/ic_person_step_1.png: 428x300 dp (321x225 px), drawable-mdpi/ic_person_step_1.png: 321x225 dp (321x225 px), drawable-xhdpi/ic_person_step_1.png: 321x225 dp (642x450 px), drawable-xxhdpi/ic_person_step_1.png: 321x225 dp (963x675 px), drawable-xxxhdpi/ic_person_step_1.png: 321x225 dp (1284x900 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_person_step_1.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_person_step_1.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_person_step_1.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_person_step_1.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_person_step_1.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_person_step_1.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_trash.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_trash.png: 31x31 dp (47x47 px), drawable-ldpi/ic_trash.png: 41x41 dp (31x31 px), drawable-mdpi/ic_trash.png: 31x31 dp (31x31 px), drawable-xhdpi/ic_trash.png: 31x31 dp (62x62 px), drawable-xxhdpi/ic_trash.png: 31x31 dp (93x93 px), drawable-xxxhdpi/ic_trash.png: 31x31 dp (124x124 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_trash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_trash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_trash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_trash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_trash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_trash.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ic_where_are_you.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ic_where_are_you.png: 321x225 dp (482x338 px), drawable-ldpi/ic_where_are_you.png: 428x300 dp (321x225 px), drawable-mdpi/ic_where_are_you.png: 321x225 dp (321x225 px), drawable-xhdpi/ic_where_are_you.png: 321x225 dp (642x450 px), drawable-xxhdpi/ic_where_are_you.png: 321x225 dp (963x675 px), drawable-xxxhdpi/ic_where_are_you.png: 321x225 dp (1284x900 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_where_are_you.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_where_are_you.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxxhdpi/ic_where_are_you.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_where_are_you.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_where_are_you.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_where_are_you.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `message_face.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/message_face.png: 84x68 dp (126x102 px), drawable-sw600dp-ldpi/message_face.png: 168x136 dp (126x102 px), drawable-sw600dp-mdpi/message_face.png: 42x34 dp (42x34 px), drawable-sw600dp-xhdpi/message_face.png: 21x17 dp (42x34 px), drawable-sw600dp-xxhdpi/message_face.png: 14x11 dp (42x34 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/message_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/message_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/message_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/message_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/message_face.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `overwrite_face.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/overwrite_face.png: 98x78 dp (147x117 px), drawable-sw600dp-ldpi/overwrite_face.png: 196x156 dp (147x117 px), drawable-sw600dp-mdpi/overwrite_face.png: 49x39 dp (49x39 px), drawable-sw600dp-xhdpi/overwrite_face.png: 25x20 dp (49x39 px), drawable-sw600dp-xxhdpi/overwrite_face.png: 16x13 dp (49x39 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/overwrite_face.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `record_icon.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/record_icon.png: 42x78 dp (63x117 px), drawable-sw600dp-ldpi/record_icon.png: 84x156 dp (63x117 px), drawable-sw600dp-mdpi/record_icon.png: 21x39 dp (21x39 px), drawable-sw600dp-xhdpi/record_icon.png: 11x20 dp (21x39 px), drawable-sw600dp-xxhdpi/record_icon.png: 7x13 dp (21x39 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/record_icon.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/record_icon.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/record_icon.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/record_icon.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/record_icon.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `samsung_logo.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/samsung_logo.png: 513x79 dp (770x119 px), drawable-ldpi/samsung_logo.png: 684x105 dp (513x79 px), drawable-mdpi/samsung_logo.png: 513x79 dp (513x79 px), drawable-xhdpi/samsung_logo.png: 513x79 dp (1026x158 px), drawable-xxhdpi/samsung_logo.png: 513x79 dp (1539x237 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/samsung_logo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/samsung_logo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/samsung_logo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/samsung_logo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/samsung_logo.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `take_photo.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/take_photo.png: 30x27 dp (45x41 px), drawable-ldpi/take_photo.png: 20x19 dp (15x14 px), drawable-mdpi/take_photo.png: 30x27 dp (30x27 px), drawable-xhdpi/take_photo.png: 30x27 dp (60x54 px), drawable-xxhdpi/take_photo.png: 30x27 dp (90x81 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/take_photo.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `take_photo.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-sw600dp-hdpi/take_photo.png: 72x66 dp (108x99 px), drawable-sw600dp-ldpi/take_photo.png: 144x132 dp (108x99 px), drawable-sw600dp-mdpi/take_photo.png: 36x33 dp (36x33 px), drawable-sw600dp-xhdpi/take_photo.png: 18x17 dp (36x33 px), drawable-sw600dp-xxhdpi/take_photo.png: 36x33 dp (108x99 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/take_photo.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `bg.png` icon has identical contents in the following configuration folders: drawable-land-ldpi, drawable-land-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-land-mdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-land-ldpi/bg.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `bg.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/bg.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/bg.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `bluetooth.png` icon has identical contents in the following configuration folders: drawable-sw600dp-hdpi, drawable-sw600dp-ldpi, drawable-sw600dp-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/bluetooth.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/bluetooth.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/bluetooth.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `delete_device_project.png` icon has identical contents in the following configuration folders: drawable-sw600dp-xhdpi, drawable-xhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/delete_device_project.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/delete_device_project.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `device_status_connected.png` icon has identical contents in the following configuration folders: drawable-hdpi, drawable-sw600dp-xhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/device_status_connected.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/device_status_connected.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `emoji_entering_pattern.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/emoji_entering_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/emoji_entering_pattern.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `emoji_entering_pattern_valid_pattern.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/emoji_entering_pattern_valid_pattern.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/emoji_entering_pattern_valid_pattern.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `encouragement_emojio.png` icon has identical contents in the following configuration folders: drawable-hdpi, drawable-ldpi, drawable-mdpi, drawable-sw600dp-hdpi, drawable-sw600dp-ldpi, drawable-sw600dp-mdpi, drawable-sw600dp-xhdpi, drawable-sw600dp-xxhdpi, drawable-sw720dp-hdpi, drawable-sw720dp-ldpi, drawable-sw720dp-mdpi, drawable-sw720dp-xhdpi, drawable-sw720dp-xxhdpi, drawable-xhdpi, drawable-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xxhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-ldpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-hdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/encouragement_emojio.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/encouragement_emojio.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `error_face.png` icon has identical contents in the following configuration folders: drawable-sw600dp-hdpi, drawable-sw600dp-ldpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/error_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/error_face.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `error_face.png` icon has identical contents in the following configuration folders: drawable-sw600dp-mdpi, drawable-sw600dp-xhdpi, drawable-sw600dp-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/error_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/error_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/error_face.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `flash_face.png` icon has identical contents in the following configuration folders: drawable-hdpi, drawable-ldpi, drawable-mdpi, drawable-sw600dp-hdpi, drawable-sw600dp-ldpi, drawable-sw600dp-mdpi, drawable-sw600dp-xhdpi, drawable-sw600dp-xxhdpi, drawable-sw720dp-hdpi, drawable-sw720dp-ldpi, drawable-sw720dp-mdpi, drawable-sw720dp-xhdpi, drawable-xhdpi, drawable-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-mdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-ldpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-hdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/flash_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/flash_face.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_arrow_down.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_arrow_down.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_arrow_down.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_arrow_left.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_arrow_left.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_arrow_left.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_back_arrow.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_back_arrow.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_back_arrow.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_connect.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_connect.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_connect.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_create_code.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_create_code.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_create_code.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_discover.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_discover.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_discover.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_face.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_face.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_flash.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_flash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_flash.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_more_vert.png` icon has identical contents in the following configuration folders: drawable-hdpi, drawable-ldpi, drawable-mdpi, drawable-sw600dp-hdpi, drawable-sw600dp-ldpi, drawable-sw600dp-mdpi, drawable-sw600dp-xhdpi, drawable-sw600dp-xxhdpi, drawable-sw720dp-hdpi, drawable-sw720dp-ldpi, drawable-sw720dp-mdpi, drawable-sw720dp-xhdpi, drawable-sw720dp-xxhdpi, drawable-xhdpi, drawable-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xxhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-ldpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw720dp-hdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_more_vert.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi/ic_more_vert.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_my_scripts.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_my_scripts.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_my_scripts.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_person_step_1.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_person_step_1.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_person_step_1.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_trash.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_trash.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_trash.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_where_are_you.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/ic_where_are_you.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/ic_where_are_you.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `message_face.png` icon has identical contents in the following configuration folders: drawable-sw600dp-hdpi, drawable-sw600dp-ldpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/message_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/message_face.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `message_face.png` icon has identical contents in the following configuration folders: drawable-sw600dp-mdpi, drawable-sw600dp-xhdpi, drawable-sw600dp-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/message_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/message_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/message_face.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `overwrite_face.png` icon has identical contents in the following configuration folders: drawable-mdpi, drawable-sw600dp-mdpi, drawable-sw600dp-xhdpi, drawable-sw600dp-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/overwrite_face.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `overwrite_face.png` icon has identical contents in the following configuration folders: drawable-sw600dp-hdpi, drawable-sw600dp-ldpi, drawable-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/overwrite_face.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/overwrite_face.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `record_icon.png` icon has identical contents in the following configuration folders: drawable-sw600dp-hdpi, drawable-sw600dp-ldpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/record_icon.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/record_icon.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `record_icon.png` icon has identical contents in the following configuration folders: drawable-sw600dp-mdpi, drawable-sw600dp-xhdpi, drawable-sw600dp-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/record_icon.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/record_icon.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/record_icon.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `samsung_logo.png` icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi/samsung_logo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-ldpi/samsung_logo.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `take_photo.png` icon has identical contents in the following configuration folders: drawable-sw600dp-hdpi, drawable-sw600dp-ldpi, drawable-sw600dp-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xxhdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-ldpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-hdpi/take_photo.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `take_photo.png` icon has identical contents in the following configuration folders: drawable-sw600dp-mdpi, drawable-sw600dp-xhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-xhdpi/take_photo.png"/>
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-sw600dp-mdpi/take_photo.png"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-hdpi`: disconnect_device.png, emoji_fail_microbit.gif, emoji_flashing_microbit.gif, emoji_microbit_found.gif, flash_modal_emoji.png... (9 more)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-mdpi`: delete_device_project.png (found in drawable-hdpi, drawable-xhdpi, drawable-xxhdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-mdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xhdpi`: emoji_fail_microbit.gif, emoji_flashing_microbit.gif, emoji_microbit_found.gif, flash_modal_emoji.png, greetings_emojio.png... (9 more)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xhdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xxhdpi`: emoji_fail_microbit.gif, emoji_flashing_microbit.gif, emoji_microbit_found.gif, flash_modal_emoji.png, greetings_emojio.png... (8 more)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/drawable-xxhdpi"/>
    </issue>

    <issue
        id="ButtonOrder"
        severity="Warning"
        message="OK button should be on the right (was &quot;Cancel | OK | OK&quot;, should be &quot;Cancel | OK | OK&quot;)"
        category="Usability"
        priority="8"
        summary="Button order"
        explanation="According to the Android Design Guide,&#xA;&#xA;&quot;Action buttons are typically Cancel and/or OK, with OK indicating the preferred or most likely action. However, if the options consist of specific actions such as Close or Wait rather than a confirmation or cancellation of the action described in the content, then all the buttons should be active verbs. As a rule, the dismissive action of a dialog is always on the left whereas the affirmative actions are on the right.&quot;&#xA;&#xA;This check looks for button bars and buttons which look like cancel buttons, and makes sure that these are on the left."
        url="http://developer.android.com/design/building-blocks/dialogs.html"
        urls="http://developer.android.com/design/building-blocks/dialogs.html"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_popup.xml"
            line="103"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_popup.xml"
            line="114"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_audio_recorder.xml"
            line="10"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_camera_old_api.xml"
            line="23"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_camera_old_api.xml"
            line="32"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_camera_old_api.xml"
            line="50"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_camera_old_api.xml"
            line="59"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_popup.xml"
            line="11"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_splash_screen.xml"
            line="26"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_splash_screen.xml"
            line="47"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/pair_microbit_step.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-sw600dp-port/pair_microbit_step.xml"
            line="28"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-land/pair_microbit_step.xml"
            line="31"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/view_entering_pattern_step.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-sw600dp-port/view_entering_pattern_step.xml"
            line="28"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-land/view_entering_pattern_step.xml"
            line="29"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-sw600dp-port/view_pairing_searching_step.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/view_pairing_searching_step.xml"
            line="28"
            column="6"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Ready?&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Ready?&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_audio_recorder.xml"
            line="26"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Step 2&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Step 2&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout-sw600dp-port/view_entering_pattern_step.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingStart` you should probably also define `paddingEnd` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="                android:paddingStart=&quot;16dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/custom_nav_header_main.xml"
            line="183"
            column="17"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingEnd` you should probably also define `paddingStart` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="            android:paddingEnd=&quot;@dimen/pairing_step_searching_tip_text_padding_end&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/view_pairing_searching_step.xml"
            line="17"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_gravity=&quot;left|top&quot;"
        errorLine2="                                        ~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_camera_old_api.xml"
            line="27"
            column="41"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_gravity=&quot;right|top&quot;"
        errorLine2="                                        ~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/activity_camera_old_api.xml"
            line="36"
            column="41"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:drawableRight` with `android:drawableEnd=&quot;@drawable/device_status_disconnected&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:drawableRight=&quot;@drawable/device_status_disconnected&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/res/layout/pairing_device_state.xml"
            line="18"
            column="9"/>
    </issue>

    <issue
        id="RtlEnabled"
        severity="Warning"
        message="The project references RTL attributes, but does not explicitly enable or disable RTL support with `android:supportsRtl` in the manifest"
        category="Internationalization:Bidirectional Text"
        priority="3"
        summary="Using RTL attributes without enabling RTL support"
        explanation="To enable right-to-left support, when running on API 17 and higher, you must set the `android:supportsRtl` attribute in the manifest `&lt;application>` element.&#xA;&#xA;If you have started adding RTL attributes, but have not yet finished the migration, you can set the attribute to false to satisfy this lint check.">
        <location
            file="/home/pkozlov/Projects/CHE1974/Research/microbit/app/src/main/AndroidManifest.xml"/>
    </issue>

</issues>
